# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Annotation Engine

on:
  push:
    branches:
      - master
    paths:
      - "annotationengine/**"
      - "tests/**"
  pull_request:
    branches: [master]

jobs:
  test:
    name: Test against different Python versions
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:13-master
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_aligned_volume
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/test_requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: true
          python-version: 3.7
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          pip install flake8 pytest
          pip install -r requirements.txt
          if [ -f test_requirements.txt ]; then pip install -r test_requirements.txt; fi
      - name: Lint with flake8
        shell: bash -l {0}
        run: |
          # stop the build if there are Python syntax errors or undefined names
          # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest
